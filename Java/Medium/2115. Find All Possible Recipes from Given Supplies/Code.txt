//Concept Reference: https://www.youtube.com/watch?v=WquFHgWIFQ8
class Solution {
    public List<String> findAllRecipes(String[] recipes, List<List<String>> ingredients, String[] supplies) {
        Map<String, Integer> indegree = new HashMap<>();
        Map<String, List<String>> graph = new HashMap<>();
        Set<String> available = new HashSet<>(Arrays.asList(supplies));
        List<String> result = new ArrayList<>();

        for(int i = 0; i<recipes.length;i++){

            indegree.put(recipes[i], ingredients.get(i).size());
            for (String ingred : ingredients.get(i)){
                graph.computeIfAbsent(ingred, k -> new ArrayList<>()).add(recipes[i]);
            }
        }

        Queue<String> queue = new LinkedList<>(available);
        while(!queue.isEmpty()){

            String item = queue.poll();
            if(!graph.containsKey(item))
                continue; 
            for(String recipe : graph.get(item)){
                indegree.put(recipe, indegree.get(recipe) - 1);
                if(indegree.get(recipe) == 0){
                    result.add(recipe);
                    queue.add(recipe);
                }
            }
          
        }
        return result;
    }
}