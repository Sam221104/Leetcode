class Solution {
    public int minCapability(int[] nums, int k) {
        int left = 1;
        int right = Arrays.stream(nums).max().getAsInt();
        int ans = right;
        while(left<=right){
            int mid = ( left + right )/ 2;
            if(canRob(nums,mid,k)){
                ans = mid;
                right = mid -1 ;

            }else{
                left = mid + 1;
            }
        }
        return ans;
    }
    public static boolean canRob(int[] nums, int mid, int k){
        int count = 0;
        for(int i = 0; i< nums.length; i++){
            if(nums[i]<=mid){
                count++;
                i++;
            }
        }
        return count>=k;
    }
}